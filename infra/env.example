# Environment Variables for INC Logistics Platform

# === Next.js Application ===
# Enable new routing service integration
USE_ROUTING_SERVICE=true

# API Bridge URL (for Next.js to call microservices)
BRIDGE_URL=http://localhost:3001

# Docker environment flag
DOCKER_ENV=false

# === Supabase Configuration ===
NEXT_PUBLIC_SUPABASE_URL=your_supabase_url
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

# === OpenAI Configuration ===
OPENAI_API_KEY=your_openai_api_key

# === Stripe Configuration ===
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# === API Bridge Configuration ===
BRIDGE_PORT=3001

# Microservice URLs (for bridge)
PRICING_SERVICE_URL=http://localhost:8001
ROUTING_SERVICE_URL=http://localhost:8002
MATCHING_SERVICE_URL=http://localhost:8003
ESCROW_SERVICE_URL=http://localhost:8004
RAG_SERVICE_URL=http://localhost:8005

# === Microservice Ports ===
PRICING_SERVICE_PORT=8001
ROUTING_SERVICE_PORT=8002
MATCHING_SERVICE_PORT=8003
ESCROW_SERVICE_PORT=8004
RAG_SERVICE_PORT=8005

# === Database Configuration ===
# PostgreSQL for Docker Compose
POSTGRES_DB=inc_logistics
POSTGRES_USER=inc_user
POSTGRES_PASSWORD=inc_password
DATABASE_URL=postgresql://inc_user:inc_password@localhost:5432/inc_logistics

# === Redis Configuration ===
REDIS_URL=redis://localhost:6379

# === Escrow Service Configuration ===
# Set to true to use real Stripe payments instead of mock
USE_REAL_STRIPE=false

# === Rate Limiting ===
UPSTASH_REDIS_REST_URL=your_upstash_redis_url
UPSTASH_REDIS_REST_TOKEN=your_upstash_redis_token

# === Security ===
# Secret for reindexing embeddings
REINDEX_SECRET=your_reindex_secret_key

# Base URL for webhooks and redirects
NEXT_PUBLIC_BASE_URL=http://localhost:3000